AWSTemplateFormatVersion: "2010-09-09"

Description: This template creates ECS components running Foundation Conatiners in Fargate Mode. 
 
#Parameters:

Resources:
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: Foundation-Execution-Role
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ecs-tasks.amazonaws.com]
            Action: [sts:AssumeRole]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  FoundationTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: FoundationTask
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
      - FARGATE
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      TaskRoleArn: arn:aws:iam::217578931327:role/AmazonECS_FullAccess
      ContainerDefinitions:
        - Name: Foundation-Container
          Image: 217578931327.dkr.ecr.us-east-1.amazonaws.com/foundation:latest
          Cpu: 256
          Memory: 512
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
          Environment:
            - Name: ASPNETCORE_ENVIRONMENT
              Value: Staging 
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: 'Foundation'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: 'ECS'
  
  FoundationService:
    Type: AWS::ECS::Service
    DependsOn: ListenerRule
    Properties: 
      Cluster: !ImportValue 'FoundationECSCluster'
      DeploymentConfiguration: 
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 2
      LaunchType: FARGATE
      HealthCheckGracePeriodSeconds: 10
      LoadBalancers: 
        - ContainerName: Foundation-Container
          ContainerPort: 80
          TargetGroupArn: !Ref ALBTargetGroup
      NetworkConfiguration: 
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
          - !ImportValue FoundationVPC-PrivateSubnet1
          - !ImportValue FoundationVPC-PrivateSubnet2
          SecurityGroups: 
          - !ImportValue ContainerSecurityGroup
      ServiceName: Foundation-Service
      TaskDefinition: !Ref FoundationTaskDefinition


  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /healthstatus
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      TargetType: ip
      Matcher:
        HttpCode: 200-299
      Name: Foundation-TG1
      Port: 80
      Protocol: HTTP
      VpcId: !ImportValue FoundationVPC-VPC
  
  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref ALBTargetGroup
          Type: forward
      Conditions:
        - Field: path-pattern
          Values:
            - /*
      ListenerArn: !ImportValue ALBListenerNoSslCertificate
      Priority: 2
          

#Outputs:
 